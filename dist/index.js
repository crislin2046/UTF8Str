parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"Focm":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;class e extends String{constructor(e=""){super(e);const t=s(e),n=t.length,o=r(e),c=o.length;Object.defineProperty(this,"bytes",{value:Uint8Array.from(t),enumerable:!0}),Object.defineProperty(this,"byteLength",{value:n,enumerable:!0}),Object.defineProperty(this,"chars",{value:Array.from(o),enumerable:!0}),Object.defineProperty(this,"charLength",{value:c,enumerable:!0})}static fromBytes(e){return n(e)}static fromUTF8Binary(e){return t(e)}}function r(e){return Array.from(e)}function t(r){return new e(decodeURIComponent(escape(r)))}function n(e){return t(Array.from(e).map(e=>String.fromCharCode(e)).join(""))}function o(e){const r=unescape(encodeURIComponent(e)).split("");return Uint8Array.from(r.map(e=>e.codePointAt(0)))}function s(e){const t=r(e).reduce((e,r)=>(e.push(...o(r)),e),[]);return Uint8Array.from(t)}function c(r){console.log(r),console.log(new e(r)),console.log(Array.from(s(r)).map(e=>e.toString(16)));const t=new e(r);console.log("fbytes",e.fromBytes(t.bytes))}function u(){c("😂😌"),c("Foo © bar 𝌆 baz ☃ qux")}exports.default=e;
},{}]},{},["Focm"], null)